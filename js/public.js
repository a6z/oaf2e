/**
 * @author      OA Wu <comdan66@gmail.com>
 * @copyright   Copyright (c) 2017 OA Wu Design
 * @license     http://creativecommons.org/licenses/by-nc/2.0/tw/
 */
!function(){"use strict";function e(e){return r(n(e),arguments)}function t(t,r){return e.apply(null,[t].concat(r||[]))}function r(t,r){var n,s,o,a,p,c,l,f,u,d=1,g=t.length,y="";for(s=0;s<g;s++)if("string"==typeof t[s])y+=t[s];else if("object"==typeof t[s]){if((a=t[s]).keys)for(n=r[d],o=0;o<a.keys.length;o++){if(!n.hasOwnProperty(a.keys[o]))throw new Error(e('[sprintf] property "%s" does not exist',a.keys[o]));n=n[a.keys[o]]}else n=a.param_no?r[a.param_no]:r[d++];if(i.not_type.test(a.type)&&i.not_primitive.test(a.type)&&n instanceof Function&&(n=n()),i.numeric_arg.test(a.type)&&"number"!=typeof n&&isNaN(n))throw new TypeError(e("[sprintf] expecting number but found %T",n));switch(i.number.test(a.type)&&(f=n>=0),a.type){case"b":n=parseInt(n,10).toString(2);break;case"c":n=String.fromCharCode(parseInt(n,10));break;case"d":case"i":n=parseInt(n,10);break;case"j":n=JSON.stringify(n,null,a.width?parseInt(a.width):0);break;case"e":n=a.precision?parseFloat(n).toExponential(a.precision):parseFloat(n).toExponential();break;case"f":n=a.precision?parseFloat(n).toFixed(a.precision):parseFloat(n);break;case"g":n=a.precision?String(Number(n.toPrecision(a.precision))):parseFloat(n);break;case"o":n=(parseInt(n,10)>>>0).toString(8);break;case"s":n=String(n),n=a.precision?n.substring(0,a.precision):n;break;case"t":n=String(!!n),n=a.precision?n.substring(0,a.precision):n;break;case"T":n=Object.prototype.toString.call(n).slice(8,-1).toLowerCase(),n=a.precision?n.substring(0,a.precision):n;break;case"u":n=parseInt(n,10)>>>0;break;case"v":n=n.valueOf(),n=a.precision?n.substring(0,a.precision):n;break;case"x":n=(parseInt(n,10)>>>0).toString(16);break;case"X":n=(parseInt(n,10)>>>0).toString(16).toUpperCase()}i.json.test(a.type)?y+=n:(!i.number.test(a.type)||f&&!a.sign?u="":(u=f?"+":"-",n=n.toString().replace(i.sign,"")),c=a.pad_char?"0"===a.pad_char?"0":a.pad_char.charAt(1):" ",l=a.width-(u+n).length,p=a.width&&l>0?c.repeat(l):"",y+=a.align?u+n+p:"0"===c?u+p+n:p+u+n)}return y}function n(e){if(s[e])return s[e];for(var t,r=e,n=[],o=0;r;){if(null!==(t=i.text.exec(r)))n.push(t[0]);else if(null!==(t=i.modulo.exec(r)))n.push("%");else{if(null===(t=i.placeholder.exec(r)))throw new SyntaxError("[sprintf] unexpected placeholder");if(t[2]){o|=1;var a=[],p=t[2],c=[];if(null===(c=i.key.exec(p)))throw new SyntaxError("[sprintf] failed to parse named argument key");for(a.push(c[1]);""!==(p=p.substring(c[0].length));)if(null!==(c=i.key_access.exec(p)))a.push(c[1]);else{if(null===(c=i.index_access.exec(p)))throw new SyntaxError("[sprintf] failed to parse named argument key");a.push(c[1])}t[2]=a}else o|=2;if(3===o)throw new Error("[sprintf] mixing positional and named placeholders is not (yet) supported");n.push({placeholder:t[0],param_no:t[1],keys:t[2],sign:t[3],pad_char:t[4],align:t[5],width:t[6],precision:t[7],type:t[8]})}r=r.substring(t[0].length)}return s[e]=n}var i={not_string:/[^s]/,not_bool:/[^t]/,not_type:/[^T]/,not_primitive:/[^v]/,number:/[diefg]/,numeric_arg:/[bcdiefguxX]/,json:/[j]/,not_json:/[^j]/,text:/^[^\x25]+/,modulo:/^\x25{2}/,placeholder:/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-gijostTuvxX])/,key:/^([a-z_][a-z_\d]*)/i,key_access:/^\.([a-z_][a-z_\d]*)/i,index_access:/^\[(\d+)\]/,sign:/^[\+\-]/},s=Object.create(null);"undefined"!=typeof exports&&(exports.sprintf=e,exports.vsprintf=t),"undefined"!=typeof window&&(window.sprintf=e,window.vsprintf=t,"function"==typeof define&&define.amd&&define(function(){return{sprintf:e,vsprintf:t}}))}();

$(function () {
  // function _ (a, x) { return new Function (a,'return ' + x); }

  var w = 60;
  var h = 8;
  var lD = false;
  var rD = false;

  var $lametricTime = $('#lametric-time').addClass ('w' + w).addClass ('h' + h);
  var $u = $lametricTime.append (new Array (w * h).fill (0).map (function (t) {
    return $('<div />').attr ('class', 'c' + t).click (function () {
      // 
$(this).attr ('class', 'c-1');
    }).contextmenu (function () {
      // $(this).attr ('class', 'c0');
      return false;
    }).mouseenter (function () {
      // if (lD) $(this).attr ('class', 'c-1');
      // if (rD) $(this).attr ('class', 'c0');
    });

  })).find ('>*');
  $(document).mousedown (function() {
    if (event.which == 1)
      lD = true;
    if (event.which == 3)
      rD = true;
  }).mouseup (function() {
      lD = false;
      rD = false;
  });
  
  function to1d (arr) {
    return arr.map (function (t) {
      return $.extend (new Array (w).fill (null), t).slice (0, w);
    }).reduce (function (p, n) {
      return p.concat (n);
    });
  }
  function render (arr2d) {
    if (!arr2d.length) return;
    return (Array.isArray (arr2d[0]) ? to1d (arr2d) : $.extend (new Array (w).fill (null), arr2d)).forEach (function (t, i) {
      t != null && $u.eq (i).attr ('class', 'c' + t);
    });
  }
  function delay (a) {
    var t = null;

    if (Array.isArray (a) && a.length) {
      t = a.shift ();
      t = t ();
      t = isNaN (t) ? 1 : t;
      setTimeout (delay.bind (this, a), t * 500);
    } else if (typeof a === 'function') {
      t = a ();
      t = isNaN (t) ? 1 : t;
      var params = Array.prototype.slice.call (arguments); params.shift ();
      setTimeout (delay.bind (this, params), t * 500);
    }
    if (typeof a != 'function') return ;
  }
  var arr2d = [
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    ];
  var chat = {
    '_1': [0b00010010, 0b00111110, 0b00000010],
    '_2': [0b00101110, 0b00101010, 0b00111010],
    '_3': [0b00101010, 0b00101010, 0b00111110],
    '_4': [0b00111000, 0b00001000, 0b00111110],
    '_5': [0b00111010, 0b00101010, 0b00101110],
    '_6': [0b00111110, 0b00101010, 0b00101110],
    '_7': [0b00100000, 0b00100000, 0b00111110],
    '_8': [0b00111110, 0b00101010, 0b00111110],
    '_9': [0b00111010, 0b00101010, 0b00111110],
    '_0': [0b00111110, 0b00100010, 0b00111110],
    '_a': [0b00011110, 0b00101000, 0b00111110],
    '_b': [0b00111110, 0b00101010, 0b00010100],
    '_c': [0b00011100, 0b00100010, 0b00100010],
    '_d': [0b00111110, 0b00100010, 0b00011100],
    '_e': [0b00111110, 0b00101010, 0b00100010],
    '_f': [0b00111110, 0b00101000, 0b00101000],
    '_g': [0b00011100, 0b00100010, 0b00101110],
    '_h': [0b00111110, 0b00001000, 0b00111110],
    '_i': [0b00100010, 0b00111110, 0b00100010],
    '_j': [0b00000100, 0b00000010, 0b00111100],
    '_k': [0b00111110, 0b00001000, 0b00110110],
    '_l': [0b00111110, 0b00000010, 0b00000010],
    '_m': [0b00111110, 0b00010000, 0b00001000, 0b00010000, 0b00111110],
    '_n': [0b00111110, 0b00010000, 0b00001000, 0b00111110],
    '_o': [0b00011100, 0b00100010, 0b00100010, 0b00011100],
    '_p': [0b00111110, 0b00101000, 0b00110000],
    '_q': [0b00011100, 0b00100010, 0b00100010, 0b00011110, 0b00000010],
    '_r': [0b00111110, 0b00101000, 0b00110110],
    '_s': [0b00111010, 0b00101010, 0b00101110],
    '_t': [0b00100000, 0b00111110, 0b00100000],
    '_u': [0b00111110, 0b00000010, 0b00111110],
    '_v': [0b00111100, 0b00000010, 0b00111100],
    '_w': [0b00111100, 0b00000010, 0b00001100, 0b00000010, 0b00111100],
    '_x': [0b00110110, 0b00001000, 0b00110110],
    '_y': [0b00111010, 0b00001010, 0b00111100],
    '_z': [0b00100110, 0b00101010, 0b00110010],
    '_{': [0b00001000, 0b00110110, 0b01000001],
    '_}': [0b01000001, 0b00110110, 0b00001000],
    '_(': [0b00011100, 0b00100010],
    '_)': [0b00100010, 0b00011100],
    '_[': [0b00111110, 0b00100010],
    '_]': [0b00100010, 0b00111110],
    '_!': [0b00111010],
    '_?': [0b00100000, 0b00101010, 0b00110000],
    '_@': [0b00111100, 0b01000010, 0b01011010, 0b01001010, 0b00110000],
    '_#': [0b00100100, 0b01111110, 0b00100100, 0b00100100, 0b01111110, 0b00100100],
    '_$': [0b00111010, 0b01101011, 0b00101110],
    '_%': [0b00100110, 0b00001000, 0b00110010],
    '_^': [0b00100000, 0b01000000, 0b00100000],
    '_&': [0b00010100, 0b00101010, 0b00010100, 0b00000010],
    '_*': [0b00010100, 0b00001000, 0b00010100],
    '_-': [0b00001000, 0b00001000, 0b00001000],
    '__': [0b00000010, 0b00000010, 0b00000010],
    '_=': [0b00010100, 0b00010100, 0b00010100],
    '_+': [0b00001000, 0b00011100, 0b00001000],
    '_/': [0b00000110, 0b00001000, 0b00110000],
    "_'": [0b00110000],
    "''": [0b00110000, 0b00000000, 0b00110000],
    '_<': [0b00001000, 0b00010100, 0b00100010],
    '_>': [0b00100010, 0b00010100, 0b00001000],
    '_:': [0b00010100],
    '_;': [0b00000010, 0b00010100],
    '_,': [0b00000001, 0b00000010],
    '_~': [0b00001100, 0b00001000, 0b00000100, 0b00001100],
    '_.': [0b00000010],
    '_\\': [0b00110000, 0b00001000, 0b00000110],
  };

  // for (var k in chat)
  //   chat[k] = chat[k].map (function (t) {
  //     return '0x' + t.toString (16);
  //   });
  // var chat = {
  //   1: [0x12, 0x3e, 0x02, 0x0],
  //   2: [0x2e, 0x2a, 0x3a, 0x0],
  //   3: [0x2a, 0x2a, 0x3e, 0x0],
  // };



    // render (arr2d);
  // function append (n) {
  //   if (typeof chat['_' + n.toLowerCase ()] === 'undefined') return;

  //   chat['_' + n.toLowerCase ()].concat (0).forEach (function (t, i) {
  //     var l = sprintf ('%0' + h + 's', t.toString (2)).split ('');
  //     render (arr2d = arr2d.map (function (u, j) {
  //       u.push (l[j]);
  //       u.shift ();
  //       return u;
  //     }));
  //   });
  // }
  function append (n, pi, ai) {
    if (typeof chat['_' + n.toLowerCase ()] === 'undefined') return;
    if (typeof pi === 'undefined') pi = 0;
    if (typeof ai === 'undefined') ai = 1;

    var l = chat['_' + n.toLowerCase ()];
    
    for (var i = 0; i < l.length + pi; i++)
      for (var j = 0; j < w; j++)
        for (var k = 0; k < h; k++)
          $u.eq (j + k * w).attr ('class', j + 1 < w ? $u.eq (j + k * w + 1).attr ('class') : '');

    l.forEach (function (t, i) {
      sprintf ('%0' + h + 's', t.toString (2)).split ('').forEach (function (t, j) {
        $u.eq ((w - 1) + j * w - (l.length - (i + 1))).addClass ('c' + t);
      });
    })

    for (var i = 0; i < ai; i++)
      for (var j = 0; j < w; j++)
        for (var k = 0; k < h; k++)
          $u.eq (j + k * w).attr ('class', j + 1 < w ? $u.eq (j + k * w + 1).attr ('class') : '');
  }
  function prepend (n, pi, ai) {
    if (typeof chat['_' + n.toLowerCase ()] === 'undefined') return;
    if (typeof pi === 'undefined') pi = 0;
    if (typeof ai === 'undefined') ai = 1;

    var l = chat['_' + n.toLowerCase ()];
    
    for (var i = 0; i < l.length + pi; i++)
      for (var j = w - 1; j >= 0; j--)
        for (var k = h - 1; k >= 0; k--)
          $u.eq (j + k * w).attr ('class', j != 0 ? $u.eq (j + k * w - 1).attr ('class') : '');

    l.forEach (function (t, i) {
      sprintf ('%0' + h + 's', t.toString (2)).split ('').forEach (function (t, j) {
        $u.eq (j * w + i).addClass ('c' + t);
        // $u.eq ((w - 1) + j * w - (l.length - (i + 1))).addClass ('c' + t);
      });
    })

    
    for (var i = 0; i < ai; i++)
      for (var j = w - 1; j >= 0; j--)
        for (var k = h - 1; k >= 0; k--)
          $u.eq (j + k * w).attr ('class', j != 0 ? $u.eq (j + k * w - 1).attr ('class') : '');
  }
  function clean () { $u.attr ('class', ''); }
  function update (str) {
    clean ();
    str.split ('').forEach (function (t) {
      append(t);
    });
    return 2;
  }
    // update ('asdfghh'),
  delay (
    update.bind (this, 'OA.WU'),
    // update.bind (this, '2'),
    // update.bind (this, '3'),
    // update.bind (this, '4'),
    // update.bind (this, '5'),
    // update.bind (this, '7'),
    // update.bind (this, '8'),
    // update.bind (this, '9'),
    // update.bind (this, '10'),
    // update.bind (this, '11'),
    // update.bind (this, '12'),
    // update.bind (this, '13'),
    // update.bind (this, '14'),
    // update.bind (this, '15'),
    // update.bind (this, '16'),
    // update.bind (this, '17'),
    // update.bind (this, '18'),
    // update.bind (this, '19'),
    // update.bind (this, '20'),
    // append.bind (this, 'b'),
    // prepend.bind (this, 'a'),
    // prepend.bind (this, 'b'),
    );


































  // function loop (a) {
  //   if (a)
  //   render ([
  //   [2,2,2,2,2,2,4,3,1],
  //   [2,2,2,2,2,4,3,1,1],
  //   [2,2,0,0,0,3,1,1,1],
  //   [2,0,2,0,0,0,0,1,1],
  //   [4,0,4,0,0,0,0,1,1],
  //   [2,4,3,0,0,0,0,1,1],
  //   [4,3,1,0,1,1,0,1,1],
  //   [3,1,1,1,1,1,1,1,1],
  //   ]);
  //   else
  //   render ([
  //   [2,2,2,2,2,2,4,3,1],
  //   [2,2,2,2,2,4,3,1,1],
  //   [2,2,0,0,0,3,1,1,1],
  //   [2,0,2,0,0,0,0,1,1],
  //   [4,0,4,0,0,0,0,1,1],
  //   [2,4,3,0,0,0,0,1,1],
  //   [4,3,0,1,1,1,1,0,1],
  //   [3,1,1,1,1,1,1,1,1],
  //   ]);
  //   setTimeout (loop.bind (this, !a), 500);
  // }
  // loop ();

  
  // delay (function () {
  //   render ([
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0],
  //   ]);
  // },function () {
  //   render ([
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,0,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0],
  //   ]);
  // },function () {
  //   render ([
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,0,0,0,0,5,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,0,0,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0],
  //   ]);
  // },function () {
  //   render ([
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,0,0,0,0,5,0,0,0,5,0,5,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,0,0,0,0,0,5,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,5,0,5,5,5,0,5,5,5,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   ]);
  // },function () {
  //   render ([
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,0,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,0,0,0,0,5,0,0,0,5,0,5,0,5,0,5,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,0,0,0,0,0,5,0,0,0,5,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,5,0,5,5,5,0,5,5,5,0,0,0,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   ]);
  // },function () {
  //   render ([
  //   [,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,0,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,5,5,0,0,0,0,5,0,0,0,5,0,5,0,5,0,5,0,0,0,5,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,0,5,0,0,5,0,0,0,0,0,5,0,0,0,5,0,0,0,5,0,5,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,5,5,5,0,5,5,5,0,5,5,5,0,0,0,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   ]);
  // },function () {
  //   render ([
  //   [,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,0,5,0,5,5,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,,,,,5,5,0,0,0,0,5,0,0,0,5,0,5,0,5,0,5,0,0,0,5,0,0,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,0,5,0,0,5,0,0,0,0,0,5,0,0,0,5,0,0,0,5,0,5,0,5,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,5,5,5,0,5,5,5,0,5,5,5,0,0,0,5,0,5,5,5,0,5,5,5,0,0,0,5,0],
  //   [,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   ]);
  // },function () {
  //   render ([
  //   [,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,0,5,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,5,5,0,0,0,0,5,0,0,0,5,0,5,0,5,0,5,0,0,0,5,0,0,0,0,0,5,0,5,0,5,0],
  //   [,,,,,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0,0,0,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,0,5,0,0,5,0,0,0,0,0,5,0,0,0,5,0,0,0,5,0,5,0,5,0,0,0,5,0,5,0,5,0],
  //   [,,,,,,,,,,,,,,5,5,5,0,5,5,5,0,5,5,5,0,0,0,5,0,5,5,5,0,5,5,5,0,0,0,5,0,5,5,5,0],
  //   [,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   ]);
  // },function () {
  //   render ([
  //   [,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   [,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,0,5,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,5,5,0,0,0,0,5,0,0,0,5,0,5,0,5,0,5,0,0,0,5,0,0,0,0,0,5,0,5,0,5,0,5,0,5,0],
  //   [,,,,,,,,,,0,5,0,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,0,0,0,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,0,5,0,0,5,0,0,0,0,0,5,0,0,0,5,0,0,0,5,0,5,0,5,0,0,0,5,0,5,0,5,0,0,0,5,0],
  //   [,,,,,,,,,,5,5,5,0,5,5,5,0,5,5,5,0,0,0,5,0,5,5,5,0,5,5,5,0,0,0,5,0,5,5,5,0,5,5,5,0],
  //   [,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  //   ]);
  // });

});